import 'package:flutter/material.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primarySwatch: Colors.blue,
        brightness: Brightness.dark, // Modo dark padrão
        textTheme: TextTheme(
          bodyMedium: TextStyle(fontSize: 18, color: Colors.white), // bodyMedium ajustado
        ),
      ),
      home: Scaffold(
        appBar: AppBar(
          title: Text('Somador de Números'),
          centerTitle: true,
        ),
        body: SomadorForm(),
      ),
    );
  }
}

class SomadorForm extends StatefulWidget {
  @override
  _SomadorFormState createState() => _SomadorFormState();
}

class _SomadorFormState extends State<SomadorForm> with TickerProviderStateMixin {
  final TextEditingController _numero1 = TextEditingController();
  final TextEditingController _numero2 = TextEditingController();
  String _resultado = '';
  Color _resultadoColor = Colors.white;
  late AnimationController _controller;

  @override
  void initState() {
    super.initState();
    _controller = AnimationController(
      vsync: this,
      duration: Duration(milliseconds: 500),
    );
  }

  @override
  void dispose() {
    _numero1.dispose();
    _numero2.dispose();
    _controller.dispose();
    super.dispose();
  }

  void _somar() {
    final double? numero1 = double.tryParse(_numero1.text);
    final double? numero2 = double.tryParse(_numero2.text);

    if (numero1 != null && numero2 != null) {
      final double soma = numero1 + numero2;
      setState(() {
        _resultado = 'Resultado: $soma';
        _resultadoColor = Colors.greenAccent;
        _controller.forward(from: 0); // Animação
      });
    } else {
      setState(() {
        _resultado = 'Por favor, insira números válidos.';
        _resultadoColor = Colors.redAccent;
        _controller.forward(from: 0); // Animação
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(16.0),
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          TextField(
            controller: _numero1,
            decoration: InputDecoration(
              labelText: 'Número 1',
              labelStyle: TextStyle(color: Colors.white),
              enabledBorder: OutlineInputBorder(
                borderSide: BorderSide(color: Colors.white),
              ),
              focusedBorder: OutlineInputBorder(
                borderSide: BorderSide(color: Colors.blueAccent),
              ),
            ),
            keyboardType: TextInputType.number,
            style: TextStyle(color: Colors.white),
          ),
          SizedBox(height: 20),
          TextField(
            controller: _numero2,
            decoration: InputDecoration(
              labelText: 'Número 2',
              labelStyle: TextStyle(color: Colors.white),
              enabledBorder: OutlineInputBorder(
                borderSide: BorderSide(color: Colors.white),
              ),
              focusedBorder: OutlineInputBorder(
                borderSide: BorderSide(color: Colors.blueAccent),
              ),
            ),
            keyboardType: TextInputType.number,
            style: TextStyle(color: Colors.white),
          ),
          SizedBox(height: 20),
          ElevatedButton(
            onPressed: _somar,
            style: ElevatedButton.styleFrom(
              backgroundColor: Colors.blueAccent, // Ajuste para backgroundColor
              padding: EdgeInsets.symmetric(vertical: 16),
              textStyle: TextStyle(fontSize: 20),
            ),
            child: Text('Somar'),
          ),
          SizedBox(height: 20),
          FadeTransition(
            opacity: _controller,
            child: Text(
              _resultado,
              style: TextStyle(fontSize: 24, color: _resultadoColor),
              textAlign: TextAlign.center,
            ),
          ),
        ],
      ),
    );
  }
}
